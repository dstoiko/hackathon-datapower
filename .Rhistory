shiny::runApp('~/Google Drive/BA Chair/Mkg Analytics/MySQL-Project/Term_Project/Dashboard/Shiny Alexis/dashboard')
shiny::runApp('~/Google Drive/BA Chair/Mkg Analytics/MySQL-Project/Term_Project/Dashboard/Shiny Alexis/dashboard')
# run Shiny app
library(shiny)
runApp()
runApp()
shiny::runApp('~/Google Drive/BA Chair/Mkg Analytics/MySQL-Project/Term_Project/Dashboard/Shiny Alexis/dashboard')
library(shiny)
library(plotly)
library(ggplot2)
library(dplyr)
library(RMySQL)
library(scales)
db = dbConnect(MySQL(),
user='root',
password='ab169203$*',
dbname='charity')
queryActType = "select ActType, SUM(Amount) as sumAmount, count(ContactId) as nbDonors
from dbact
group by ActType"
tabActType = dbGetQuery(db, queryActType)
queryYearsChannel = "select YEAR(ActDate) AS 'year', SUM(Amount) as sumAmount, count(ContactId) as nbDonors , Channel
from dbact
group by year , Channel;"
tabYearsChannel = dbGetQuery(db, queryYearsChannel)
tabYearsChannel$year = factor(tabYearsChannel$year)
distinctChannel <- unique(tabYearsChannel$Channel)
queryActRank = "select ActRank, AVG(Amount) as avgAmount, count(ContactId) as nbDonors
from dbact
group by ActRank"
tabActRank = dbGetQuery(db, queryActRank)
View(tabYearsChannel)
# Close connection
all_cons <- dbListConnections(MySQL())
for (con in all_cons) {
dbDisconnect(con)
}
dbListConnections(MySQL())
rm(all_cons)
rm(all_cons, con, db)
library(shiny)
library(plotly)
library(ggplot2)
library(dplyr)
library(RMySQL)
library(scales)
db = dbConnect(MySQL(),
user='root',
password='ab169203$*',
dbname='charity')
queryActType = "select ActType, SUM(Amount) as sumAmount, count(ContactId) as nbDonors
from dbact
group by ActType"
tabActType = dbGetQuery(db, queryActType)
queryYearsChannel = "select YEAR(ActDate) AS 'year', SUM(Amount) as sumAmount, count(ContactId) as nbDonors , Channel
from dbact
group by year , Channel;"
tabYearsChannel = dbGetQuery(db, queryYearsChannel)
tabYearsChannel$year = factor(tabYearsChannel$year)
distinctChannel <- unique(tabYearsChannel$Channel)
queryActRank = "select ActRank, AVG(Amount) as avgAmount, count(ContactId) as nbDonors
from dbact
group by ActRank"
tabActRank = dbGetQuery(db, queryActRank)
# Close connection
all_cons <- dbListConnections(MySQL())
for (con in all_cons) {
dbDisconnect(con)
}
dbListConnections(MySQL())
rm(all_cons, con, db)
library(shiny)
source("data/analysis_dash.R")
setwd("~/Google Drive/BA Chair/Mkg Analytics/MySQL-Project/Term_Project/Dashboard/Shiny Alexis/dashboard")
shiny::runApp()
runApp()
?mapvalues
library(plyr)
runApp()
mapvalues(distinctChannel, distinctChannel, "Other", "Regular Mail", "Phone", "Event", "Web")
mapvalues(distinctChannel,
c("AU", "MD", "TE", "EV", "WW"),
c("Other", "Regular Mail", "Phone", "Event", "Web"))
distinctChannel <- unique(tabYearsChannel$Channel) %>%
mapvalues(distinctChannel,
c("AU", "MD", "TE", "EV", "WW"),
c("Other", "Regular Mail", "Phone", "Event", "Web"))
distinctChannel <- unique(tabYearsChannel$Channel) %>%
mapvalues(.,
distinctChannel,
c("Other", "Regular Mail", "Phone", "Event", "Web"))
setwd("~/Google Drive/BA Chair/Mkg Analytics/MySQL-Project/Term_Project/Dashboard/Shiny Alexis/dashboard")
library(shiny)
setwd("~/Google Drive/BA Chair/Mkg Analytics/MySQL-Project/Term_Project/Dashboard/Shiny Alexis/dashboard")
# run Shiny app
library(shiny)
runApp()
shiny::runApp()
distinctChannel
shiny::runApp()
